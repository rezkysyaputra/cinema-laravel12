name: Laravel CD

on:
  push:
    branches:
      - main # Workflow akan berjalan setiap kali ada push ke branch 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest
    # environment: production # Opsional, untuk manajemen environment di GitHub

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2" # Sesuaikan dengan versi PHP di shared hosting Anda
          extensions: mbstring, pdo_mysql, dom, gd, json, bcmath, exif, fileinfo, imagick # Pastikan semua ekstensi penting ada
          tools: composer:v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies (production)
        run: composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

      - name: Setup Node.js (for frontend build)
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Sesuaikan dengan versi Node.js yang Anda inginkan

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install NPM dependencies
        run: npm ci

      - name: Build Assets
        run: npm run build

      - name: Deploy to Shared Hosting via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "." # Mengunggah semua file dan folder dari root proyek di runner
          target: "${{ secrets.APP_SERVER_DIR }}" # Tujuan di server, harus path absolut.
          rm: true # Ini akan menghapus semua konten di direktori target sebelum mengunggah yang baru.

      - name: Run Post-Deployment Commands via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # Pindah ke direktori aplikasi yang baru diunggah
            cd ${{ secrets.APP_SERVER_DIR }}

            # --- Bagian Kunci untuk .env ---
            # Menulis file .env dari GitHub Secret
            echo "${{ secrets.PROD_ENV_CONTENT }}" > .env
            # Pastikan hak akses file .env aman
            chmod 600 .env
            # --- Akhir Bagian Kunci ---

            php artisan migrate --force # HATI-HATI! Pastikan ini aman untuk database Anda
            php artisan cache:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan storage:link # Jika Anda menggunakan storage symlink

            # Opsional: Update symlink public_html
            # HATI-HATI: Pastikan symlink sudah dibuat manual setidaknya sekali.
            # rm -rf ${{ secrets.APP_WEB_ROOT_DIR }}
            # ln -s ${{ secrets.APP_SERVER_DIR }}/public ${{ secrets.APP_WEB_ROOT_DIR }}
